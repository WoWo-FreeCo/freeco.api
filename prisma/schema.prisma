// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model CheckContentInSequence {
  index     Int     @id @db.UnsignedInt
  video     String?
  credit    Int
  isMission Boolean
}

model UserDailyCheck {
  createdAt DateTime @default(now()) @db.Timestamp(0)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String   @db.VarChar(36)

  @@id([userId, createdAt])
}

model UserActivation {
  YouTubeChannelActivated Boolean @default(false)
  FacebookGroupActivated  Boolean @default(false)
  IGFollowActivated       Boolean @default(false)
  VIPActivated            Boolean @default(false)
  SVIPActivated           Boolean @default(false)
  user                    User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId                  String  @unique @db.VarChar(36)
}

model User {
  id            String           @id @default(uuid()) @db.VarChar(36)
  email         String           @unique
  password      String
  nickname      String?
  cellphone     String           @unique @db.VarChar(15)
  telephone     String?          @db.VarChar(15)
  addressOne    String
  addressTwo    String?
  addressThree  String?
  taxIDNumber   String?          @db.VarChar(18)
  rewardCredit  Int
  recommendCode String           @unique @db.VarChar(36)
  recommendedBy String?          @db.VarChar(36)
  activation    UserActivation?
  dailyChecks   UserDailyCheck[]
  createdAt     DateTime         @default(now()) @db.Timestamp(0)
  updatedAt     DateTime         @updatedAt @db.Timestamp(0)

  @@index([cellphone])
  @@index([taxIDNumber])
  @@index([email])
}

model AdminUser {
  id        String   @id @default(uuid()) @db.VarChar(36)
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @updatedAt @db.Timestamp(0)

  @@index([email])
}

model ProductCategory {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now()) @db.Timestamp(0)
  products  Product[]
  updatedAt DateTime  @updatedAt @db.Timestamp(0)
}

enum ProductAttribute {
  GENERAL
  CODE_CHAIN
}

model Product {
  id          Int              @id @default(autoincrement())
  name        String
  price       Int
  memberPrice Int
  vipPrice    Int
  svipPrice   Int
  attribute   ProductAttribute @default(GENERAL)
  category    ProductCategory? @relation(fields: [categoryId], references: [id], onDelete: Restrict, onUpdate: Restrict)
  categoryId  Int?
  createdAt   DateTime         @default(now()) @db.Timestamp(0)
  updatedAt   DateTime         @updatedAt @db.Timestamp(0)
}

model HomeBanner {
  id        Int      @id @default(autoincrement())
  img       String   @db.VarChar(255)
  href      String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(0)
}
