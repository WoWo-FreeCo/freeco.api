// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model UserDailyCheck {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamp(0)
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique @db.VarChar(36)

  @@index([createdAt])
}

model UserActivation {
  YouTubeChannelActivated Boolean @default(false)
  FacebookGroupActivated  Boolean @default(false)
  VIPActivated            Boolean @default(false)
  SVIPActivated           Boolean @default(false)
  user                    User    @relation(fields: [userId], references: [id])
  userId                  String  @unique @db.VarChar(36)
}

model User {
  id            String           @id @default(uuid()) @db.VarChar(36)
  email         String           @unique
  password      String
  nickname      String?
  cellphone     String           @unique @db.VarChar(15)
  telephone     String?          @db.VarChar(15)
  addressOne    String
  addressTwo    String?
  addressThree  String?
  taxIDNumber   String?          @db.VarChar(18)
  rewardCredit  Int
  recommendCode String           @unique @db.VarChar(36)
  recommendedBy String?          @db.VarChar(36)
  activation    UserActivation?
  dailyChecks   UserDailyCheck[]
  createdAt     DateTime         @default(now()) @db.Timestamp(0)
  updatedAt     DateTime         @updatedAt @db.Timestamp(0)

  @@index([cellphone])
  @@index([taxIDNumber])
  @@index([email])
}

model AdminUser {
  id        String   @id @default(uuid()) @db.VarChar(36)
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @updatedAt @db.Timestamp(0)

  @@index([email])
}

model ProductCategory {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now()) @db.Timestamp(0)
  products  Product[]
  updatedAt DateTime  @updatedAt @db.Timestamp(0)
}

model Product {
  id                String          @id @default(uuid()) @db.VarChar(36)
  name              String
  price             Int
  memberPrice       Int
  vipPrice          Int
  svipPrice         Int
  productCategory   ProductCategory @relation(fields: [productCategoryId], references: [id])
  productCategoryId Int
  createdAt         DateTime        @default(now()) @db.Timestamp(0)
  updatedAt         DateTime        @updatedAt @db.Timestamp(0)
}
